Poznatky:
	DONE - noun ma nsubj / nsubjpass bud s dalsim noun alebo verb, toto treba rozlisit a podla toho dalej parsovat
	DONE - ak je nsubj spojene noun, tka treba hladat COP, aby sme zistili sloveeso akym to je prepojene napriklad: Bratislava IS city
	DONE - ak je nsubj prepojene verb, tak treba hladat object toho, napriklad dobj (hlavny), iobj (vedlajsie), napriklad: Clinton defeated Dote.
		- Clinton <-- nsubj --> defetead
		- defeated <-- dobj --> Dote.
		- VBN, VBG, VBD, VBP, VBZ, VB, 
	DONE - nemuselo by byt zle, ak je nsubj prepojene s verb, tak zistit jeho auxiliary
	
	DONE - zaujimave by mohlo byt tahat este k hlavnemu noun aj compound
		- napriklad ked mame Bratislava <-- nsubj --> city, tak k city este dotiahnut city <-- compound --> capital
		
	DONE - treba pozerat aj neg, aby sme neprekrutili informacie
	DONE - prechadzat nmod, aby sme nezostali len pri trojslovnych vetach, ale trochu ich doplnili
		- treba premysliet, ktore nmod brat, podla coho ich filtrovat (POS ?), aby sme zas nezostali pri povodnej vete
		- aspon prvy by nemuselo byt zle
	DONE - pozriet conj, aby ked su tam nejake &&, tak sme to odchytili
	
	
	InterText:
		+ plain text, XML
		+ undo / redo
		+ numbering
		+ presuvanie textu
		+ mergovanie textu
		+ vyhladavanie
		+ verzia pre server
		+ editacia
		+ html tagy zobrazuje
		
		- nezjednoduchsuje text
		- neberie do uvahy editaciu pri opatovnom pouziti
		
	NOVA Text Aligner:
		+ nacitanie rozdielnych textov do stlpca v pravo a vlavo
		+ akcie ako merge / move na riadkoch / blokoch
		+ vyhladavanie textu s zvyraznovanim
		+ font resize
		+ export do roznych formatov
		+ evit textu
		
		- uzivatel moze zadat cokolvek
		- iba usporiadavanie textu
		- nezohladnuje zmeny pri dalsom zapnuti
		- funguje lokalne, nema db
		
	LF Aligner
		+ vstupne data vela moznosti
			+ txt
			+ pdf
			+ HTML
			+ URL
			+ EU legislation by CELEX number
			+ European parliement reports (download automatically)
		+ vyber jazykov
			+ pocet aj typy
		+ rozdelenie podla riadkov / paragrafov
		+ viacero vystupov
			+ graficky editor
			+ XLS
	
===============================================================================================================================================================
	Poznamky zo stretnutia
===============================================================================================================================================================
	
- Inter Text
- paralel text
- motivacia
	- vlastny opis
	- motivacne kecy
- analyza
	- podobne programy
- Diskusia
- co planjem  robit v lete
	
- Sweet
- Musutelsa
- OTS


Otazky:
	- oslovovat sa v mnznom cisle ?
	- citovanie webstranok (wordnet.com)
	- rozlozenie podkapitol
	- spominanie v analyza na zameranie sa v dalsom priebehu implementacie
	- obrazky
		- kolko ?
	- citovanie - docasne plain
	- NLP / spracovanie prirodzeneho jazyka / oboje naraz spolu zamenitelne
	- citovanie za koncom vety
	- priklady s mojim menom
	- citovanie manualu (dependency manual Stanford CoreNLP)
	- citovanie obrazkov
	- citovanie na konci paragrafov / citovanie na konci sekcie
	
	
	
- nazvy v tabulkach, anglicke nazvy, zpresnit, lokalnost dat
- Provnanie konvencie nazvov, zmenit nazov tabulky
- texty medzi tabulky
- citacia stranok -> poznamka pod ciarov
- WordNet-e
- citacia 6, najst niekde inde definicou NLP
- analyza premenovat, nova kapitola na porovnanie existujucich apps
- premenovat relacna vs. nerelacna

	- Navrh
		- 5.1 uchovavanie textov v databazach
			5.1.1 - relacne
			5.1.2 - textove
			5.1.3 - ostatne
			5.1.4 - zhrnutie
		- 5.2 nas navrh uchovavania
			- kolekciw
			- ako sa ukladaju dokumentu
			
- nadradeny token a podriadeny token (hlavny a vedlajsi) (governor, dependent)
- priloha
	- pomenovania dependencies

- uvod
- kurziva v pseudokode
===============================================================================================================================================================

TODO:
	DONE - pridanie specialnej dependency pri ukladani do db, ktora bude oznacovat koniec vety. 
	DONE	- spravene cez ukladanie indexov, na ktorych koncia vety poznamok a podla nich sa potom rozdeli rozparsovana poznamka
	
	DONE - rozlisenie sady pravidiel, ak pre vetu vyhovuju viac sady
			- zatial len podla poctu a nazvov dependencies a zoberie sa prva.
			// vypocitavanie % zhody pravidiel
			
    DONE - pridat TokenType do kolekcii
        - premazanie kolekcie poznamok a spustit parsovanie odznova
        
    DONE - premysliet a implementovat, ktore "slova" (dependencies) sa budu pouzivatelovi ponukat v okne FormReorderNote
        - nemozu sa tam zobrazovat len slova z predchadzajuco spracovanej poznamky, lebo tym padom by si nemohol ziadne nove slovo pridat
            - beru sa len dependent-y, kedze tak sa beru aj pri aplikovani pravidiel, s vynimkou pri nominal subject sa berie aj governor,
              to zatial nie je zohladnene, je mozne, ze ani nebude treba?
        - treba ponukat vsetky slova - dependencies s povodnej vety, vyfiltrovane tak, aby tam neboli duplicitne
        
	DONE - odstranit hodnotu position z pravidla
		- nepouziva sa
        - pole position sa prerobilo na pouzitie pre poziciu slova dependency v upravenej poznamke

    DONE - po ulozeni zmenenej poznamky sa mi pridal dalsi zaznam do pola sentencesEnds
        - pravdepodobne sposobene vytvaranim BsonDocumentu

    DONE - Pridat bodky (konce viet) do upravy poznamky
        - tym padom moze pouzivatel vytvorit zo suvetia viacero viet, ktore budu sucast poznamky
            - napriklad pri suveti zlozeho z dvoch viet sa mu ponuknu dve "bodky", cize moze vytvorit dve vety
        - zohladnovat pocet bodiek ako pocet NoteParts upravenej poznamky a podla toho ich ulozit
            - zatial sa berie len ako jedna NotePart cela poznamka
        
    DONE - zohladnovanie spravnych pozicii v sentencesEnds ked vytvarame upravenu poznamku
        
    DONE - pridat do db kolekcie notes aj pole date, ktoru bude zaznamenavat kedy bol dany zaznam vytvoreny
        
    DONE - makewordconsiderrealtion
    
    DONE - nie vzdy vytvarat novy zaznam ale robit aj update
        - ak bola 100%-na zhoda pravidla so spracovavanou vetou, tak nevytvarat novy zaznam, ale len update
        - zabaranime tym mnozeniu dat, a hlavne nebudeme mat pre jednu vetu viacero pravidiel s rovankymi zhodami
            - tym padom by sa vybralo prve v poradi, co nemusi byt ziadany pripad
        
    - AND-Parser
        - do additionalInfomation pridat dalsie pole, ktore bude oznacot miesto, kde doplnit rozprsovane AND spojenie
            - napriklad: Neighbours of Slovak Republic are [{AND}].
                - vysledok: Neighbours of Slovak Republic are Poland. Neighbours of Slovak Republic are Czech Republic. atd..
        - novy typ reprezentracie pre NotenizerAdvancedLabel
        - pouzivatel bude moct zadefinovat (popresuvat si), kde bude to miesto [{AND}]
        - pouzite ten zakladny AND parser? aby mas z coho puzivatel vychadzat?
    
    - ukladat clanky
    	- parovat poznamky s clankom

    - vysetrit chybu, preco sa neponukaju vsetky slova (dependencies) z editovanet poznamky - vety v unused words
    	- pri editacii poznamky vety z clanku o cestu a ich prezidentovi tam chyba Zeman
    	- clear DB -> parse clanok o SVK -> parse clanok o CZ
    	
    - prehodit rule -> note
    	- teraz objekt note obsahuje Rule, malo byt to byt naopak: Rule bude obsahovat Note
	- naplnit DB s viacerimi pravidlami
	- kontrola zaporu
		-  pri spracovavani textu o cesku sa nevyhodnotil zapor vo vete This has not caught..